#!/bin/bash

while getopts "v" opt; do
    case $opt in
        v)
            echo "Verbose mode is enabled" >&2
            verbose=1
            ;;
        \?)
            echo "Invalid option -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument" >&2
            exit 1
            ;;
     esac
done
shift "$(($OPTIND -1))"

anyopts=""
if [[ $verbose = 1 ]]; then anyopts="${anyopts} -v "; fi

echo "number of files to convert:" $#

user=$USER

# build the sbatch script
echo "#!/bin/bash" > /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --nodes=1 #request 1 node per" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --tasks-per-node=1 ##we want our node to do 1 task at the same time" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --cpus-per-task=24 ##ask for 24 CPUs per task" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --mem-per-cpu=4gb ## request 4 gigabyte per cpu" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --time=05:00:00 ## ask for max 5 hours on the node" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --output=batchout.txt" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH --open-mode=append" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "#SBATCH " >> /tmp/convert2ometiff_sbatch_$user.sh

declare -a in_array
declare -a out_array
# declare -a opt_array
count=0

# create output locations and build the filename arrays
for arg in "$@"
do
	name=`basename "${arg}"`
	dirname=`dirname "${arg}"`
	echo "Adding file: ${name} to queue"
	bname=`echo $name | sed 's/\..*//g'`
	echo "bname: ${bname}"

	in_array[count]="\"$arg\""
	out_array[count]="\"${dirname}/${bname}\""
	let "count += 1"
done

# declare the in and out arrays and set up srun with an array task list
echo "in_array=(${in_array[*]})" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "out_array=(${out_array[*]})" >> /tmp/convert2ometiff_sbatch_$user.sh
# echo "opt_array=(${opt_array[*]})" >> /tmp/convert2ometiff_sbatch_$user.sh
echo "srun convert2ometiff.py ${anyopts}  \${in_array[\$SLURM_ARRAY_TASK_ID]} \${out_array[\$SLURM_ARRAY_TASK_ID]}" >> /tmp/convert2ometiff_sbatch_$user.sh

let "count -= 1"
# now submit it to sbatch
sbatch --array=0-${count} /tmp/convert2ometiff_sbatch_$user.sh

