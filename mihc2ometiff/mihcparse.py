#!/usr/bin/python3

import os
import argparse
import numpy as np
import pandas as pd
import xml.etree.ElementTree as ET

parser = argparse.ArgumentParser(description='mihcparse.py: parse various bits of info from mIHC metadata files')
parser.add_argument("XMLPath", help="Provide path to the XML file generated by Aperio ScanScope")
parser.add_argument("OutPath", help="Provide basename where the XML ROI files can be cached")
args = parser.parse_args()

inpath = args.XMLPath
outpath = args.OutPath

root = ET.parse(inpath).getroot()
mpp = root.attrib["MicronsPerPixel"]

print(mpp)

df = pd.DataFrame(columns=['ROI', 'X', 'Y', 'W', 'H'])

for region in root.findall("./Annotation/Regions/Region"):
    regID = int(region.attrib["Id"])
    min_x = 100000000000.0
    min_y = 100000000000.0
    max_x = -100000000000.0
    max_y = -100000000000.0
    for verts in region.findall("./Vertices/Vertex"):
        min_x = min(min_x, float(verts.attrib["X"]))
        min_y = min(min_y, float(verts.attrib["Y"]))
        max_x = max(max_x, float(verts.attrib["X"]))
        max_y = max(max_y, float(verts.attrib["Y"]))

    width = max_x - min_x
    height = max_y - min_y
    df = df.append({'ROI': regID, 'X': min_x, 'Y': min_y, 'W': width, 'H': height}, ignore_index=True)


# print("dataframe: ")
# print(df)

# 2 small XML files collect metadata extracted from filenames
outfile = outpath + "_ROI1.xml"
of = open(outfile, "w")

omeroi = ""
for index, row in df.iterrows():
    omeroi += "<ROIRef ID=\"ROI:" + str(int(row['ROI'])) + "\"/>"
omeroi += "</Image>"

of.write(omeroi)
of.close()

outfile = outpath + "_ROI2.xml"
of = open(outfile, "w")

omeroi = ""
for index, row in df.iterrows():
    roiID = str(int(row['ROI']))
    omeroi += "<ROI ID=\"ROI:" + roiID +"\" Name=\"ROI" + roiID + "\">"
    omeroi += "<Union>"
    omeroi += "<Rectangle ID=\"Shape:" + roiID + "\" Text=\"ROI" + roiID + "\" X=\"" + ("%7.2f" % row['X']) + "\" Y=\"" + ("%7.2f" % row['Y']) + "\" Width=\"" + ("%7.2f" % row['W']) + "\" Height=\"" + ("%7.2f" % row['H']) + "\" StrokeColor=\"65535\"/>"
    omeroi += "</Union>"
    omeroi += "</ROI>"
omeroi += "</OME>"

of.write(omeroi)
of.close()

